{"version":3,"sources":["utils.js","SingleColor.js","App.js","index.js"],"names":["rgbToHex","SingleColor","rgb","weight","hexColor","index","brightness","selectedOption","useState","alert","setAlert","bcg","join","hexValue","useEffect","timeout","setTimeout","clearTimeout","onClick","navigator","clipboard","writeText","className","style","backgroundColor","App","color","setColor","error","setError","setSelectedOption","Values","all","parseInt","list","setList","onSubmit","e","preventDefault","colors","console","log","type","name","value","checked","onChange","target","placeholder","map","getBrightness","key","hex","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oLASeA,IC2CAC,EAjDK,SAAC,GAOd,IANLC,EAMI,EANJA,IACAC,EAKI,EALJA,OAEAC,GAGI,EAJJC,MAII,EAHJD,UAEAE,GACI,EAFJC,eAEI,EADJD,YACI,EACsBE,oBAAS,GAD/B,mBACGC,EADH,KACUC,EADV,KAEEC,EAAMT,EAAIU,KAAK,KAEfC,EAAQ,WAAOT,GAsBrB,OApBAU,qBAAU,WACR,IAAMC,EAAUC,YAAW,WACzBN,GAAS,KACR,KACH,OAAO,kBAAMO,aAAaF,MACzB,CAACN,IAgBF,6BACES,QAAS,WACPR,GAAS,GACTS,UAAUC,UAAUC,UAAUR,IAEhCS,UAAS,gBAAWhB,EAAa,GAAK,cAAgB,MACtDiB,MAAO,CAAEC,gBAAgB,OAAD,OAASb,EAAT,OAExB,uBAAGW,UAAU,iBAAiBnB,EAA9B,KACA,uBAAGmB,UAAU,eAAeT,GAC3BJ,GAAS,uBAAGa,UAAU,SAAb,yB,gBC2DDG,MArGf,WAAgB,IAAD,EACajB,mBAAS,IADtB,mBACNkB,EADM,KACCC,EADD,OAEanB,oBAAS,GAFtB,mBAENoB,EAFM,KAECC,EAFD,OAG+BrB,mBAAS,IAHxC,mBAGND,EAHM,KAGUuB,EAHV,OAIWtB,mBAAS,IAAIuB,IAAO,WAAWC,IAAIC,SAAS,MAJvD,mBAINC,EAJM,KAIAC,EAJA,KAiBb,OACE,oCACE,6BAASb,UAAU,aACjB,+CAEA,0BAAMc,SAhBS,SAACC,GACpBA,EAAEC,iBACF,IACE,IAAIC,EAAS,IAAIR,IAAOL,GAAOM,IAAIzB,GACnC4B,EAAQI,GACR,MAAOX,GACPC,GAAS,GACTW,QAAQC,IAAIb,MAUR,yBAAKN,UAAU,cACb,yBAAKA,UAAU,cACb,+BACE,2BACEoB,KAAK,QACLC,KAAK,aACLC,MAAO,EACPC,QAA4B,IAAnBtC,EACTe,UAAU,mBACVwB,SAAU,SAACT,GACTP,EAAkBG,SAASI,EAAEU,OAAOH,WAR1C,OAeF,yBAAKtB,UAAU,cACb,+BACE,2BACEoB,KAAK,QACLC,KAAK,aACLC,MAAO,GACPC,QAA4B,KAAnBtC,EACTe,UAAU,mBACVwB,SAAU,SAACT,GAAD,OAAOP,EAAkBG,SAASI,EAAEU,OAAOH,WAPzD,QAaF,yBAAKtB,UAAU,cACb,+BACE,2BACEoB,KAAK,QACLC,KAAK,aACLC,MAAO,GACPC,QAA4B,KAAnBtC,EACTe,UAAU,mBACVwB,SAAU,SAACT,GAAD,OAAOP,EAAkBG,SAASI,EAAEU,OAAOH,WAPzD,SAcJ,2BACEF,KAAK,OACLE,MAAOlB,EACPsB,YAAY,UACZF,SAAU,SAACT,GAAD,OAAOV,EAASU,EAAEU,OAAOH,QACnCtB,UAAS,UAAKM,EAAQ,QAAU,QAElC,4BAAQN,UAAU,MAAMoB,KAAK,UAA7B,YAKJ,6BAASpB,UAAU,UAChBY,EAAKe,KAAI,SAACvB,EAAOrB,GAChB,IAAMC,EAAaoB,EAAMwB,cAAcxB,EAAMxB,KAE7C,OACE,kBAAC,EAAD,eACEI,WAAYA,EACZ6C,IAAK9C,GACDqB,EAHN,CAIErB,MAAOA,EACPD,SAAUsB,EAAM0B,IAChB7C,eAAgBA,WC5F9B8C,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,U","file":"static/js/main.50275200.chunk.js","sourcesContent":["function componentToHex(c) {\n  var hex = c.toString(16);\n  return hex.length == 1 ? '0' + hex : hex;\n}\n\nfunction rgbToHex(r, g, b) {\n  return '#' + componentToHex(r) + componentToHex(g) + componentToHex(b);\n}\n\nexport default rgbToHex;\n","import React, { useState, useEffect } from \"react\";\nimport rgbToHex from \"./utils\";\n\nconst SingleColor = ({\n  rgb,\n  weight,\n  index,\n  hexColor,\n  selectedOption,\n  brightness,\n}) => {\n  const [alert, setAlert] = useState(false);\n  const bcg = rgb.join(\",\");\n  // const hex = rgbToHex(...rgb);\n  const hexValue = `#${hexColor}`;\n\n  useEffect(() => {\n    const timeout = setTimeout(() => {\n      setAlert(false);\n    }, 3000);\n    return () => clearTimeout(timeout);\n  }, [alert]);\n\n  // let brigthness = selectedOption;\n  // if (brigthness === 20) {\n  //   brigthness = brigthness / 4;\n  // } else if (brigthness === 10) {\n  //   brigthness = brigthness / 1;\n  // } else if (brigthness === 5) {\n  //   brigthness = brigthness / 0.25;\n  // }\n\n  //  const textColour = brightness > 125 ? \"color-light\" : null;\n\n  //  className={`color ${index > brigthness && \"color-light\"}`}\n  //     style={{ backgroundColor: `rgb(${bcg})` }}\n  return (\n    <article\n      onClick={() => {\n        setAlert(true);\n        navigator.clipboard.writeText(hexValue);\n      }}\n      className={`color ${brightness < 50 ? \"color-light\" : null}`}\n      style={{ backgroundColor: `rgb(${bcg})` }}\n    >\n      <p className=\"percent-value\">{weight}%</p>\n      <p className=\"color-value\">{hexValue}</p>\n      {alert && <p className=\"alert\">copied to clipboard</p>}\n    </article>\n  );\n};\n\nexport default SingleColor;\n","import React, { useState } from \"react\";\nimport SingleColor from \"./SingleColor\";\n\nimport Values from \"values.js\";\n\nfunction App() {\n  const [color, setColor] = useState(\"\");\n  const [error, setError] = useState(false);\n  const [selectedOption, setSelectedOption] = useState(10);\n  const [list, setList] = useState(new Values(\"#f15025\").all(parseInt(10)));\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    try {\n      let colors = new Values(color).all(selectedOption);\n      setList(colors);\n    } catch (error) {\n      setError(true);\n      console.log(error);\n    }\n  };\n\n  return (\n    <>\n      <section className=\"container\">\n        <h3>color generator</h3>\n\n        <form onSubmit={handleSubmit}>\n          <div className=\"percentage\">\n            <div className=\"form-check\">\n              <label>\n                <input\n                  type=\"radio\"\n                  name=\"react-tips\"\n                  value={5}\n                  checked={selectedOption === 5}\n                  className=\"form-check-input\"\n                  onChange={(e) => {\n                    setSelectedOption(parseInt(e.target.value));\n                  }}\n                />\n                5%\n              </label>\n            </div>\n\n            <div className=\"form-check\">\n              <label>\n                <input\n                  type=\"radio\"\n                  name=\"react-tips\"\n                  value={10}\n                  checked={selectedOption === 10}\n                  className=\"form-check-input\"\n                  onChange={(e) => setSelectedOption(parseInt(e.target.value))}\n                />\n                10%\n              </label>\n            </div>\n\n            <div className=\"form-check\">\n              <label>\n                <input\n                  type=\"radio\"\n                  name=\"react-tips\"\n                  value={20}\n                  checked={selectedOption === 20}\n                  className=\"form-check-input\"\n                  onChange={(e) => setSelectedOption(parseInt(e.target.value))}\n                />\n                20%\n              </label>\n            </div>\n          </div>\n\n          <input\n            type=\"text\"\n            value={color}\n            placeholder=\"#f15025\"\n            onChange={(e) => setColor(e.target.value)}\n            className={`${error ? \"error\" : null}`}\n          />\n          <button className=\"btn\" type=\"submit\">\n            submit\n          </button>\n        </form>\n      </section>\n      <section className=\"colors\">\n        {list.map((color, index) => {\n          const brightness = color.getBrightness(color.rgb);\n\n          return (\n            <SingleColor\n              brightness={brightness}\n              key={index}\n              {...color}\n              index={index}\n              hexColor={color.hex}\n              selectedOption={selectedOption}\n            />\n          );\n        })}\n      </section>\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}